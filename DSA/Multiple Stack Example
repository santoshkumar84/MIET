#include<stdio.h>
#define MAX 100
int stack[MAX], top1 = -1, top2 = MAX;
int isStack1Empty(){
	return (top1 == -1) ? 1 : 0;
}
int isStack2Empty(){
	return (top2 == MAX) ? 1 : 0;
}
int isStack1Full(){
	return (top1 == top2-1) ? 1 : 0;
}
int isStack2Full(){
	return (top2 == top1+1) ? 1 : 0;
}
void push_stack1(int data){
	if(isStack1Full())
		printf("Stack1 overflow!!!\n");
	else{
		stack[++top1] = data;
		printf("Element Added !!!\n");
	}
}
void push_stack2(int data){
	if(isStack2Full())
		printf("Stack2 overflow!!!\n");
	else{
		stack[--top2] = data;
		printf("Element Added !!!\n");
	}
}
void pop_stack1(){
	if(isStack1Empty())
		printf("Stack Underflow!!!\n");
	else{
		int val = stack[top1--];
		printf("%d pop from stack1!!\n", val);
	}
}
void pop_stack2(){
	if(isStack2Empty())
		printf("Stack Underflow!!!\n");
	else{
		int val = stack[top2++];
		printf("%d pop from stack1!!\n", val);
	}
}
void peek_stack1(){
	if(isStack1Empty())
		printf("Stack1 is empty !!!\n");
	else
		printf("Top element of stack-1 is %d\n", stack[top1]);
}
void peek_stack2(){
	if(isStack2Empty())
		printf("Stack1 is empty !!!\n");
	else
		printf("Top element of stack-2 is %d\n", stack[top2]);
}
void show_stack1(){
	if(isStack1Empty())
		printf("Stack is empty !!!\n");
	else{
		int i;
		printf("Stack1 elements are : \n");
		for(i=top1; i>=0; i--){
			printf("%d\n", stack[i]);
		}
	}
}
void show_stack2(){
	if(isStack2Empty())
		printf("Stack is empty !!!\n");
	else{
		int i;
		printf("Stack2 elements are : \n");
		for(i=top2; i<MAX; i++){
			printf("%d\n", stack[i]);
		}
	}
}
int main(){
	while(1){
		printf("1. Push Stack 1\n");
		printf("2. Push Stack 2\n");
		printf("3. Pop Stack 1\n");
		printf("4. Pop Stack 2\n");
		printf("5. Peek Stack 1\n");
		printf("6. Peek Stack 2\n");
		printf("7. Show Stack 1\n");
		printf("8. Show Stack 2\n");
		printf("9. Exit\n");
		int choice;
		printf("Enter Choice : ");
		scanf("%d", &choice);
		
	}
	return 0;
}
